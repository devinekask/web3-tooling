"use strict";(self.webpackChunktooling=self.webpackChunktooling||[]).push([[832],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),y=c(n),d=i,f=y["".concat(s,".").concat(d)]||y[d]||p[d]||l;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,o=new Array(l);o[0]=y;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},6041:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const l={},o="Stylelint",a={unversionedId:"code quality/stylelint",id:"code quality/stylelint",title:"Stylelint",description:"In the same way you can lint your JavaScript files with ESLint, it is possible to do so with Stylelint",source:"@site/docs/code quality/03-stylelint.md",sourceDirName:"code quality",slug:"/code quality/stylelint",permalink:"/workflows/code quality/stylelint",draft:!1,editUrl:"https://github.com/devinekask/workflows/blob/main/docs/code quality/03-stylelint.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ESLint",permalink:"/workflows/code quality/eslint"}},s={},c=[{value:"Init",id:"init",level:2},{value:"Run stylelint",id:"run-stylelint",level:2},{value:"VS Code plugin",id:"vs-code-plugin",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stylelint"},"Stylelint"),(0,i.kt)("p",null,"In the same way you can lint your JavaScript files with ESLint, it is possible to do so with ",(0,i.kt)("a",{parentName:"p",href:"https://stylelint.io/"},"Stylelint")),(0,i.kt)("h2",{id:"init"},"Init"),(0,i.kt)("p",null,"To get up and running, you need to install stylelint itself and a configuration. According to the ",(0,i.kt)("a",{parentName:"p",href:"https://stylelint.io/user-guide/get-started"},"stylelint docs"),", you can do this by running the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save-dev stylelint stylelint-config-standard\n")),(0,i.kt)("p",null,"There is no setup wizard like ESLint has, so you need to create a ",(0,i.kt)("inlineCode",{parentName:"p"},".stylelintrc.json")," file in the root of your project yourself. There, you simply reference the standard ruleset (see the docs)"),(0,i.kt)("h2",{id:"run-stylelint"},"Run stylelint"),(0,i.kt)("p",null,"You can run Stylelint on all your css files by running the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'npx stylelint "**/*.css"\n')),(0,i.kt)("h2",{id:"vs-code-plugin"},"VS Code plugin"),(0,i.kt)("p",null,"By using the ",(0,i.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint"},"VS Code Stylelint plugin"),", you can see the errors and warnings directly in your editor. See the documentation how to configure this in a way it doesn't collide with the build in VS Code CSS linting."))}p.isMDXComponent=!0}}]);