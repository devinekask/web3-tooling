"use strict";(self.webpackChunktooling=self.webpackChunktooling||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Home","href":"/workflows/","docId":"intro"},{"type":"link","label":"Terminal","href":"/workflows/terminal-01","docId":"terminal-01"},{"type":"category","label":"Git","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Git intro","href":"/workflows/git/basics/git-01-intro","docId":"git/basics/git-01-intro"},{"type":"link","label":"Create a new git-repository","href":"/workflows/git/basics/git-02-create-repo","docId":"git/basics/git-02-create-repo"},{"type":"link","label":"Track & commit files","href":"/workflows/git/basics/git-03-commit","docId":"git/basics/git-03-commit"},{"type":"link","label":"Undo","href":"/workflows/git/basics/git-04-undo","docId":"git/basics/git-04-undo"},{"type":"link","label":"Ignore files","href":"/workflows/git/basics/git-05-ignore","docId":"git/basics/git-05-ignore"},{"type":"link","label":"Branching","href":"/workflows/git/basics/git-06-branches","docId":"git/basics/git-06-branches"}],"href":"/workflows/category/basics"},{"type":"category","label":"Collaboration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Collaboration with git","href":"/workflows/git/collaboration/collab-01-github-push","docId":"git/collaboration/collab-01-github-push"},{"type":"link","label":"Pull","href":"/workflows/git/collaboration/collab-02-pull-rebase","docId":"git/collaboration/collab-02-pull-rebase"},{"type":"link","label":"Merge conflicts","href":"/workflows/git/collaboration/collab-03-merge-conflicts","docId":"git/collaboration/collab-03-merge-conflicts"}],"href":"/workflows/category/collaboration"}],"href":"/workflows/category/git"},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Packages","href":"/workflows/modules/packages-01-modules","docId":"modules/packages-01-modules"},{"type":"link","label":"NPM","href":"/workflows/modules/packages-02-npm","docId":"modules/packages-02-npm"},{"type":"link","label":"Packages in practice","href":"/workflows/modules/packages-03-practice","docId":"modules/packages-03-practice"},{"type":"link","label":"Advantages of npm","href":"/workflows/modules/packages-04-advantages","docId":"modules/packages-04-advantages"},{"type":"link","label":"Npx","href":"/workflows/modules/packages-05-npx","docId":"modules/packages-05-npx"}],"href":"/workflows/category/modules"},{"type":"link","label":"Vite","href":"/workflows/vite-01-intro","docId":"vite-01-intro"},{"type":"link","label":"Homebrew","href":"/workflows/homebrew-01-intro","docId":"homebrew-01-intro"},{"type":"category","label":"Code quality","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Editor config","href":"/workflows/code quality/editorconfig","docId":"code quality/editorconfig"},{"type":"link","label":"ESLint","href":"/workflows/code quality/eslint","docId":"code quality/eslint"},{"type":"link","label":"Stylelint","href":"/workflows/code quality/stylelint","docId":"code quality/stylelint"}],"href":"/workflows/category/code-quality"}]},"docs":{"code quality/editorconfig":{"id":"code quality/editorconfig","title":"Editor config","description":"How is your system setup? Are you using tabs or spaces for indenting? Are your files in a UTF-8 encoding? Do you end every file with a blank line or not?","sidebar":"tutorialSidebar"},"code quality/eslint":{"id":"code quality/eslint","title":"ESLint","description":"Linting","sidebar":"tutorialSidebar"},"code quality/stylelint":{"id":"code quality/stylelint","title":"Stylelint","description":"In the same way you can lint your JavaScript files with ESLint, it is possible to do so with Stylelint","sidebar":"tutorialSidebar"},"git/basics/git-01-intro":{"id":"git/basics/git-01-intro","title":"Git intro","description":"About Git","sidebar":"tutorialSidebar"},"git/basics/git-02-create-repo":{"id":"git/basics/git-02-create-repo","title":"Create a new git-repository","description":"You can turn any existing directory into a git repository with the git init command. It doesn\'t matter if there are already files or subfolders in it. We will start with a new empty directory, but know that this is not necessary to manage a project via git.","sidebar":"tutorialSidebar"},"git/basics/git-03-commit":{"id":"git/basics/git-03-commit","title":"Track & commit files","description":"Commit","sidebar":"tutorialSidebar"},"git/basics/git-04-undo":{"id":"git/basics/git-04-undo","title":"Undo","description":"Whoops, we messed up, what now?","sidebar":"tutorialSidebar"},"git/basics/git-05-ignore":{"id":"git/basics/git-05-ignore","title":"Ignore files","description":"It won\'t be necessary to keep track of all the files in a project folder via Git. For example, it is not a good idea to track a nodemodules (see later) or uploads folder in your repository. Also hidden system files, such as .DSStore are of no use in a repository.","sidebar":"tutorialSidebar"},"git/basics/git-06-branches":{"id":"git/basics/git-06-branches","title":"Branching","description":"You can also use branches via Git.","sidebar":"tutorialSidebar"},"git/collaboration/collab-01-github-push":{"id":"git/collaboration/collab-01-github-push","title":"Collaboration with git","description":"So far we have worked locally with git. You can also collaborate with several people on 1 repository by working with a remote server. Everyone has a local copy of the repository, and can synchronize their changes via a remote server with other people who have the repository.","sidebar":"tutorialSidebar"},"git/collaboration/collab-02-pull-rebase":{"id":"git/collaboration/collab-02-pull-rebase","title":"Pull","description":"Pull existing repository","sidebar":"tutorialSidebar"},"git/collaboration/collab-03-merge-conflicts":{"id":"git/collaboration/collab-03-merge-conflicts","title":"Merge conflicts","description":"So far we have only made changes in separate files. However, it can happen that you have made changes to the same file with 2 people, and that a conflict occurs.","sidebar":"tutorialSidebar"},"homebrew-01-intro":{"id":"homebrew-01-intro","title":"Homebrew","description":"Our personal computer is full of applications and terminal commands (ls, git, nvm, etc.) that we use every day. For Apps we use the App store or we install then via a download. Terminal commands can be tricky, sometimes they need a specific build step customized to your machine. Homebrew makes this process a breeze. Compare it like npm for your terminal commands.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Home","description":"Devine Development workflows","sidebar":"tutorialSidebar"},"modules/packages-01-modules":{"id":"modules/packages-01-modules","title":"Packages","description":"When writing code it is beneficial to split things up by functionality. It makes our code more structured and therefore clearer.","sidebar":"tutorialSidebar"},"modules/packages-02-npm":{"id":"modules/packages-02-npm","title":"NPM","description":"In the previous chapter we learned how to make our code more reusable by splitting it up into modules. But it doesn\'t stop there. Now, we want to be able to share modules with other developers.","sidebar":"tutorialSidebar"},"modules/packages-03-practice":{"id":"modules/packages-03-practice","title":"Packages in practice","description":"Let us create a project where we make use of npm.","sidebar":"tutorialSidebar"},"modules/packages-04-advantages":{"id":"modules/packages-04-advantages","title":"Advantages of npm","description":"In the previous chapter, we\'ve installed a package to get an idea how npm works. Here we are about to do some routines to make it clear what the advantages of such a workflow is. You will learn a couple of things along the way, so buckle up!","sidebar":"tutorialSidebar"},"modules/packages-05-npx":{"id":"modules/packages-05-npx","title":"Npx","description":"Don\'t worry, we won\'t introduce another entirely new thing here. npx is a command line tool that comes installed when installing Node.js. It allows us to run node scripts without installing them first (technically they are \'cached\' locally, but not installed...)","sidebar":"tutorialSidebar"},"terminal-01":{"id":"terminal-01","title":"Terminal","description":"A basic knowledge of how to use the command line is essential in our field.","sidebar":"tutorialSidebar"},"vite-01-intro":{"id":"vite-01-intro","title":"Vite","description":"Up until now, we where doing fine with the VS Code Live Server. But since our applications will become more and more complex (depending on npm packages to give an example), we need a more advanced development server. This is where Vite comes in. There are a lot of advantages, the following is just a summary:","sidebar":"tutorialSidebar"}}}')}}]);