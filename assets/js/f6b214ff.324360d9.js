"use strict";(self.webpackChunktooling=self.webpackChunktooling||[]).push([[835],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1356:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Branching",l={unversionedId:"git/git-06-branches",id:"git/git-06-branches",title:"Branching",description:"You can also use branches via Git.",source:"@site/docs/git/git-06-branches.md",sourceDirName:"git",slug:"/git/git-06-branches",permalink:"/web3-tooling/git/git-06-branches",draft:!1,editUrl:"https://github.com/devinekask/web3-tooling/docs/git/git-06-branches.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ignore files",permalink:"/web3-tooling/git/git-05-ignore"},next:{title:"Git - collaboration",permalink:"/web3-tooling/category/git---collaboration"}},c={},p=[{value:"Master/main",id:"mastermain",level:2}],s={toc:p};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"branching"},"Branching"),(0,r.kt)("p",null,"You can also use branches via Git."),(0,r.kt)("p",null,"You can use branches to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Develop new features"),(0,r.kt)("li",{parentName:"ul"},"Bug fixes"),(0,r.kt)("li",{parentName:"ul"},"Experiment with new ideas without influencing your production code (code that is online)")),(0,r.kt)("p",null,"This is a walkthrough to work with 2 branches, namely ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branches. You can find the production ready code on the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch. On the ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch, on the other hand, you can commit code that is not yet completely ready to show to your end user."),(0,r.kt)("p",null,"Once you're happy with the (bug-free) code in the ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch, you can merge it into the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch. This process is explained further."),(0,r.kt)("p",null,"You continue working on the current project."),(0,r.kt)("p",null,"Create a branch ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," by executing the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git branch develop\n")),(0,r.kt)("p",null,"Get an overview of all the branches"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git branch\n")),(0,r.kt)("p",null,"Now that we have created a new ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch, we can switch to it by running ",(0,r.kt)("inlineCode",{parentName:"p"},"git checkout develop"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout develop\n")),(0,r.kt)("p",null,"Make some commits on the ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch."),(0,r.kt)("p",null,"We would now like to merge our code from ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," with our ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," code, so that both branches contain the same code (now ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," has more commits than ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),", i.e. ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," stands before ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"). For this we first have to switch back to our ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch and merge ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," into it in a next step:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout main\n")),(0,r.kt)("p",null,"The merge of ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," is done by the ",(0,r.kt)("inlineCode",{parentName:"p"},"git merge")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git merge develop main\n")),(0,r.kt)("p",null,"Switch back to ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," immediately so you don't accidentally develop in the ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch (we want our ",(0,r.kt)("inlineCode",{parentName:"p"},"develop")," branch to always have the most recent code):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout develop\n")),(0,r.kt)("h2",{id:"mastermain"},"Master/main"),(0,r.kt)("p",null,"Historically, often the terms 'master' and 'slave' were used to name branches. In hindsight, these were offensive to say the least, so a more inclusive alternative 'main' became the default branch on many platforms."),(0,r.kt)("p",null,"That is why you will come across some 'master' branches in code examples or tutorials."),(0,r.kt)("p",null,"A 'main' branch doesn't have any superpowers or other special features, in the end, it is just a name."),(0,r.kt)("p",null,"You can easily rename a branch with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -m OLD-BRANCH-NAME NEW-BRANCH-NAME\n")),(0,r.kt)("p",null,"If you like to gain some more background information on this, you can ",(0,r.kt)("a",{parentName:"p",href:"https://www.theserverside.com/feature/Why-GitHub-renamed-its-master-branch-to-main"},"read this article")))}m.isMDXComponent=!0}}]);